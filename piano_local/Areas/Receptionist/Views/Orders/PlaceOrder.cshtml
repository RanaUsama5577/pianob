
@{
    ViewBag.Title = "PlaceOrder";
    Layout = "~/Areas/Receptionist/Views/Shared/_Layout.cshtml";
}
<link href="~/admin-assets/app-assets/forms/form-extended.min.css" rel="stylesheet" />
<style>
    .btn-quantity.style-1 {
        width: 90px;
    }

    .input-group {
        position: relative;
        display: flex;
        flex-wrap: wrap;
        align-items: stretch;
        width: 100%;
    }

        .input-group > .form-control:not(:last-child), .input-group > .custom-select:not(:last-child) {
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
        }

    .btn-quantity.style-1 input {
        border: 0 none;
        font-size: 14px;
        padding: 0 25px;
        text-align: center;
        margin-top: 8px;
    }

    .input-group > .form-control, .input-group > .form-control-plaintext, .input-group > .custom-select, .input-group > .custom-file {
        position: relative;
        flex: 1 1 auto;
        width: 1%;
        margin-bottom: 0;
    }

    .btn-quantity.style-1 .bootstrap-touchspin .input-group-btn-vertical {
        position: absolute;
        width: 100%;
        left: 0;
    }

    .bootstrap-touchspin .input-group-btn-vertical {
        position: absolute;
        right: 0;
        height: 100%;
        z-index: 11;
    }

    .btn-quantity.style-1 .input-group-btn-vertical button:first-child {
        right: 0;
    }

    .btn-quantity.style-1 .input-group-btn-vertical button {
        height: 25px;
        width: 25px;
        top: 50%;
        transform: translateY(-50%);
    }

    .bootstrap-touchspin .input-group-btn-vertical .bootstrap-touchspin-up {
        border-radius: 4px 4px 4px 4px;
        top: 0;
    }

    .bootstrap-touchspin .input-group-btn-vertical > .btn {
        position: absolute;
        right: 0;
        height: 50%;
        padding: 0;
        width: 2em;
        text-align: center;
        line-height: 1;
    }

    button:not(:disabled), [type="button"]:not(:disabled), [type="reset"]:not(:disabled), [type="submit"]:not(:disabled) {
        cursor: pointer;
    }

    .btn-quantity.style-1 .input-group-btn-vertical button:last-child {
        left: 0;
    }

    .btn-quantity.style-1 .input-group-btn-vertical button {
        height: 25px;
        width: 25px;
        top: 50%;
        transform: translateY(-50%);
    }

    .bootstrap-touchspin .input-group-btn-vertical .bootstrap-touchspin-down {
        border-radius: 4px 4px 4px 4px;
        bottom: 0;
    }

    .bootstrap-touchspin .input-group-btn-vertical > .btn {
        position: absolute;
        right: 0;
        height: 50%;
        padding: 0;
        width: 2em;
        text-align: center;
        line-height: 1;
    }

    button:not(:disabled), [type="button"]:not(:disabled), [type="reset"]:not(:disabled), [type="submit"]:not(:disabled) {
        cursor: pointer;
    }
</style>

<section class="content">
    <div class="block-header">
        <div class="row">
            <div class="col-12">
                <h2>
                    Place Order<img src="~/admin-assets/images/piano/Bg-transparent/Ingredient-removebg-preview.png" height="30" class="ml-2" />
                </h2>
            </div>

        </div>
    </div>
    <div class="container-fluid">
        <!-- Basic Validation -->
        <div class="row clearfix">
            <div id="AddItem" class="col-lg-12 col-md-12 col-sm-12">
                <div class="card">
                    <div class="body">
                        <div id="form_validation" method="POST">

                            <div class="row mt-4">
                                <div class="col-12">
                                    <a id="num1" class="btn btn-primary text-white"><i class="fas fa-plus mr-2 text-white"></i>Add Item</a>

                                </div>
                            </div>
                            <div id="targetDIV">

                            </div>
                            <button onclick="next()" class="btn btn-raised btn-primary btn-round waves-effect mb-4 mt-4" style="float:right" type="submit">Next</button>
                        </div>
                    </div>
                </div>
            </div>

            @*Payment*@

            <div id="pay" class="col-lg-12 col-md-12 col-sm-12 d-none">
                <div class="card">
                    <div class="body">
                        <div id="form_validation" method="POST">

                            <div class="row mt-4">
                                <div class="col-12">
                                    <h5>Amount to Pay <b id="TotalPrice"></b> </h5>
                                </div>
                                <div class="col-12 col-sm-12 col-md-4">
                                    <label>Order type</label>
                                    <div>
                                        <input onclick="ToggleMap()" type="radio" id="Takeaway" name="type" class="mr-1" checked value="">
                                        <label for="Takeaway" class="font-13 font-bold"> Takeaway</label><br>
                                        <input onclick="ToggleMap()" type="radio" class="mr-1" id="dineIn" name="type" value="">
                                        <label for="dineIn" class="font-13 font-bold"> Dine-In</label><br>
                                        <input onclick="ToggleMap()" type="radio" class="mr-1" id="delivery" name="type" value="">
                                        <label for="delivery" class="font-13 font-bold"> Delivery</label><br>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-12 col-md-4">
                                    <label>Table Number</label>
                                    <input type="text" class="form-control" id="tableNumber" />
                                </div>
                            </div>
                            <hr />

                            <div class="row mt-4">
                                <div class="col-12">
                                    <h5>Customer Info</h5>
                                </div>
                                <div class="col-12 col-sm-12 col-md-4">
                                    <div class="form-group form-float">
                                        <label>Name</label>
                                        <input type="text" class="form-control mt-1" id="customer_name" placeholder="Name" required>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-12 col-md-4">
                                    <div class="form-group form-float">
                                        <label>E-mail</label>
                                        <input type="email" class="form-control mt-1" id="customer_email" placeholder="E-mail" required>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-12 col-md-4">
                                    <div class="form-group form-float">
                                        <label>Phone Number</label>
                                        <input type="number" class="form-control mt-1" id="customer_phone" placeholder="Phone Number" required>
                                    </div>
                                </div>
                                <div class="col-12 mt-2" id="OrderLocation">
                                    <div class="form-group">
                                        <label>Order Delivery Location</label>
                                        <div class="input-group">
                                            <input type="hidden" class="form-control" name="Latitude" id="lat" value="-33.878358" />
                                            <input type="hidden" class="form-control" name="Longitude" id="lng" value="151.1835443" />
                                            <input style="width:90%;z-index:2147483647;" id="autocomplete_search" name="Address" type="text" class="form-control rounded" placeholder="Search Location" />
                                            <br />
                                            <div class="form-group" style="width: 100%;">
                                                <div id="map" style="width:100%; height:400px;padding:10px;margin-top:10px;"></div>
                                                <button hidden id="MyLocator" style="background-color: rgb(255, 255, 255);box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 4px -1px;display: block;border: 0px;margin: 0px; padding: 0px;text-transform: none;position: relative;cursor: pointer;user-select: none;overflow: hidden;width: 40px;height: 40px;top: -250px;float: right;right: 11px;">
                                                </button>
                                            </div>
                                            <label id="lab" style=" position: relative;top: -69px;font-size: 16px;font-weight: 500;"></label>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="d-flex flex-row float-right">
                                <button onclick="back()" class="btn btn-raised btn-secondary btn-round waves-effect mb-4 mt-4" style="float:right">Previous</button>
                                <button id="PlaceOrderBtn" onclick="PlaceOrder()" class="btn btn-raised btn-primary btn-round waves-effect mb-4 mt-4" style="float:right" type="submit">Place Order</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @*Confirmation*@

            <div id="confirmation" class="col-lg-12 col-md-12 col-sm-12 d-none">
                <div class="card">
                    <div class="body">
                        <div id="form_validation" method="POST">

                            <div class="row mt-4">
                                <div class="col-12">
                                    <img src="/admin-assets/images/piano/cooking.png" class="d-flex m-auto" height="100" />
                                    <span class="font-22 d-flex justify-content-center">Your have successfully added a new order received!</span>
                                    <br />
                                    <p id="OrderId" class="text-center font-18">Your Order Number: #123456 </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div style="display:none">
        <select id="CategorySelect">
            @foreach (var i in (IEnumerable<SelectListItem>)ViewBag.Categories)
            {
                <option value="@i.Value">@i.Text</option>
            }
        </select>
        <select id="ProductSelect">
            @foreach (var i in (IEnumerable<Entities.ProductDtos>)ViewBag.Products)
            {
                <optgroup label="@i.CategoryId">
                    <option data-price="@i.Price" value="@i.Id">@i.Name</option>
                </optgroup>
            }
        </select>
        <div id="AllIngredients">
            @foreach (var i in (List<Entities.IngredientListVms>)ViewBag.Ingredients)
            {
                <div class="row ml-3 @i.CategoryId">
                    <div class="col-md-3">
                        <div class="checkbox" style="margin-bottom: 0;line-height: 2.4;">
                            <input id="i-@i.Id" data-id="@i.Id" data-price="@i.Price" class="ingredient_name" type="checkbox">
                            <label for="i-@i.Id" style="line-height: 1.5;">@i.Name</label>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="quantity btn-quantity style-1 m-auto">
                            <div class="input-group  bootstrap-touchspin bootstrap-touchspin-injected">
                                <input id="demo_vertical2" type="text" value="0" name="demo_vertical2" class="form-control">
                                <span class="input-group-btn-vertical">
                                    <button onclick="IngredientUpFunction(this)" class="btn btn-primary bootstrap-touchspin-up " type="button">+</button>
                                    <button onclick="IngredientDownFunction(this)" class="btn btn-primary bootstrap-touchspin-down " type="button">-</button>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</section>

<div class="row ml-3" id="IngrdientClone" style="display:none;">
    <div class="col-md-3">
        <div class="checkbox" style="margin-bottom: 0;line-height: 2.4;">
            <input id="remember_me" type="checkbox">
            <label for="remember_me" style="line-height: 1.5;">Olives</label>
        </div>
    </div>
    <div class="col-md-2">
        <div class="quantity btn-quantity style-1 m-auto">
            <div class="input-group  bootstrap-touchspin bootstrap-touchspin-injected">
                <input id="demo_vertical2" type="text" value="0" name="demo_vertical2" class="form-control">
                <span class="input-group-btn-vertical">
                    <button onclick="UpFunction(this)" class="btn btn-primary bootstrap-touchspin-up " type="button">+</button>
                    <button onclick="DownFunction(this)" class="btn btn-primary bootstrap-touchspin-down " type="button">-</button>
                </span>
            </div>
        </div>
    </div>
</div>

<script src="~/admin-assets/app-assets/forms/jquery.card.js"></script>
<script src="~/admin-assets/app-assets/forms/form-card.min.js"></script>
<script async defer type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCt7JTzt_AoYGTPLoHIwYt8vw0vkjErorc&libraries=places&callback=initMap"></script>
<script type="text/javascript">
    var marker;
    var map;
    var radius = 10000;
    var geocoder;
    function initMap(latitude, longitude) {
        search_lat = "";
        search_lng = "";
        formattedAddress = "";
        latitude = parseFloat(latitude) ?? -33.878358;
        longitude = parseFloat(longitude) ?? 151.1835443;
        var input = document.getElementById('autocomplete_search');
        map = new google.maps.Map(document.getElementById('map'), {
            zoom: 11,
            center: { lat: latitude, lng: longitude }
        });
        // var geoloccontrol = new klokantech.GeolocationControl(map, 11);
        marker = new google.maps.Marker({
            map: map,
            draggable: true,
            zoom: 11,
            animation: google.maps.Animation.DROP,
            position: { lat: latitude, lng: longitude }
        });
        marker.addListener('click', toggleBounce);
        markerCoords(marker);
        geocoder = new google.maps.Geocoder();
        var autocomplete = new google.maps.places.Autocomplete(input);
        autocomplete.addListener('place_changed', function () {
            var place = autocomplete.getPlace();
            // place variable will have all the information you are looking for.
            $('#lat').val(place.geometry['location'].lat());
            $('#long').val(place.geometry['location'].lng());
            search_lat = place.geometry['location'].lat();
            search_lng = place.geometry['location'].lng();
            $("#address").html(place.formatted_address);
            $("#autocomplete_search").val(place.formatted_address);

            //setCountryStateCity(place, false);
            // SETTING LAT LNG
            $("#lat").val(search_lat);
            $("#lng").val(search_lng);
            map = new google.maps.Map(document.getElementById('map'), {
                zoom: 18,
                center: { lat: search_lat, lng: search_lng }
            });
            marker = new google.maps.Marker({
                map: map,
                draggable: true,
                zoom: 18,
                animation: google.maps.Animation.DROP,
                position: { lat: search_lat, lng: search_lng }
            });
            marker.addListener('click', toggleBounce);
            markerCoords(marker);
            var latlng = new google.maps.LatLng(search_lat, search_lng);
            map.setCenter(latlng);
            console.log('init Map', search_lat);
        });
    }
    function toggleBounce() {
        if (marker.getAnimation() !== null) {
            marker.setAnimation(null);
        } else {
            marker.setAnimation(google.maps.Animation.BOUNCE);
        }
    }
    function markerCoords(markerobject) {
        google.maps.event.addListener(markerobject, 'dragend', function (evt) {
            var newlat = evt.latLng.lat().toFixed(3);
            var newlng = evt.latLng.lng().toFixed(3);
            geocoder.geocode({
                latLng: new google.maps.LatLng(newlat, newlng)
            }, function (responses) {
                if (responses && responses.length > 0) {
                    //setCountryStateCity(responses, true);
                    $("#address").html(responses[0].formatted_address);
                    $("#autocomplete_search").val(responses[0].formatted_address);
                }
                else {
                    console.log('Cannot determine address at this location.');
                }
            });
            $("#lat").val(newlat);
            $("#lng").val(newlng);
            console.log(newlat, " drag value");

        });
    }
    $("#MyLocator").on("click", function () {
        getLocation();
    })
    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(showPosition);
        }
        else {
            var latitude = "-33.878358";
            var longitude = "151.1835443";
            $("#lat").val("-33.878358");
            $("#lng").val("151.1835443");
            map = new google.maps.Map(document.getElementById('map'), {
                zoom: 18,
                center: { lat: latitude, lng: longitude }
            });
            marker = new google.maps.Marker({
                map: map,
                draggable: true,
                zoom: 2,
                animation: google.maps.Animation.DROP,
                position: { lat: latitude, lng: longitude }
            });
            marker.addListener('click', toggleBounce);
            //radius = 1000;
            markerCoords(marker);
            var latlng = new google.maps.LatLng(latitude, longitude);
            map.setCenter(latlng);
            $("#autocomplete_search").val(map.formatted_address);
            alert("Geolocation is not supported by this browser.");
        }
    }
    function showPosition(position) {
        map = new google.maps.Map(document.getElementById('map'), {
            zoom: 18,
            center: { lat: position.coords.latitude, lng: position.coords.longitude }
        });
        marker = new google.maps.Marker({
            map: map,
            draggable: true,
            zoom: 2,
            animation: google.maps.Animation.DROP,
            position: { lat: position.coords.latitude, lng: position.coords.longitude }
        });
        marker.addListener('click', toggleBounce);
        markerCoords(marker);
        var latlng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
        map.setCenter(latlng);
        $("#lat").val(position.coords.latitude);
        $("#lng").val(position.coords.longitude);
        console.log("Show position ", position.coords.latitude);
    }
</script>
<script>
    $(document).ready(function () {
        $('#OrderLocation').hide();
        $('input[type="radio"]').click(function () {
            if ($('#card').prop("checked") == true) {
                $('#cardDiv').css("display", "flex");
            }
            else if ($('#card').prop("checked") == false) {
                $('#cardDiv').css("display", "none");
            }
        });
    });
    $('#num1').on('click', function () {
        //$("#targetDIV").empty();
        var targetDiv = $("#targetDIV");
        var cats = ShowCategories();
        var timestamp = new Date().getTime().toString();
        targetDiv.append('<div class="p-2 mt-1 sectionClone">' +
            '<div class="form-row">' +
            '<div class="col-md-3"><label>Select Category</label>' +
            '<select onchange="ChangeProducts(this)" id="a-' + timestamp + '" class="form-float show-tick w-100">' +
            '<option value="" disabled selected>-- Select Category</option>' +
            '</select>' +
            '</div>' +
            '<div class= "col-md-3" > <label>Select Product</label>' +
            '<select id="p-' + timestamp + '" class= "form-float show-tick w-100" > ' +
            '<option value = "" disabled selected > --Select Product</option > ' +
            '</select> ' +
            '</div> ' +
            '<div class="col-md-2">' +
            '<div class="quantity btn-quantity style-1 m-auto">' +
            '<label>Quantity</label>' +
            '<div class="input-group  bootstrap-touchspin bootstrap-touchspin-injected"><input id="demo_vertical2" type="text" value="1" name="demo_vertical2" class="form-control"><span class="input-group-btn-vertical"><button onclick="UpFunction(this)" class="btn btn-primary bootstrap-touchspin-up " type="button">+</button><button onclick="DownFunction(this)" class="btn btn-primary bootstrap-touchspin-down " type="button">-</button></span></div>' +
            '</div>' +
            '</div>' +
            '<div class="col-md-12 mt-4 mb-3" id="Ingredients">' +
            '</div>' +
            '<div class="col-md-12 m-auto">' +
            '<button onclick="RemoveSection(this)" class="btn btn-primary">Remove</button>' +
            '</div> ' +
            '</div>' +
            '<hr>' +
            '</div>');
        $('#a-' + timestamp).selectpicker('destroy');
        $('#a-' + timestamp).html(cats);
        $('#a-' + timestamp).selectpicker();
        var Id = 'a-' + timestamp;
        var Id2 = 'p-' + timestamp;
        ShowProducts(Id, Id2);
        $('#a-' + timestamp).attr('id', 'CategoryId');
        $('#p-' + timestamp).attr('id', 'ProductId');
    });
    function ChangeProducts(element) {
        var select = $(element).closest('.col-md-3').next().find('select');
        $(select).selectpicker('destroy');
        ShowChangeProducts(element, select);
        $(select).selectpicker();
    }
    function UpFunction(element) {
        var input = $(element).parent().siblings('#demo_vertical2');
        var itemCount = $(element).parent().siblings('#demo_vertical2').val();
        var itemCount = parseInt(itemCount);
        itemCount += 1;
        if (itemCount <= 99) {
            $(input).val(itemCount);
        }
    }
    function DownFunction(element) {
        var input = $(element).parent().siblings('#demo_vertical2');
        var itemCount = $(element).parent().siblings('#demo_vertical2').val();
        var itemCount = parseInt(itemCount);
        itemCount -= 1;
        if (itemCount > 0) {
            $(input).val(itemCount);
        }
    }
    function RemoveSection(element) {
        $(element).closest('.sectionClone').remove();
    }
    function next() {
        var getProductsData = OrderCheck();
        if (getProductsData.price == 0) {
            MixinSweet("", "Please select some products", "info", 2000);
            return false;
        }
        $('#TotalPrice').html("$" + getProductsData.price);
        $("#AddItem").addClass("d-none");
        $("#pay").removeClass("d-none");
    }
    function ShowCategories() {
        var options = $('#CategorySelect > option').clone();
        return options;
    }
    function ShowIngredients(catId, element) {
        var clone = $('#AllIngredients').find('.' + catId).clone();
        clone.each(function () {
            var Id = $(this).find('input[type="checkbox"]').attr('data-id');
            var timestamp = new Date().getTime().toString();
            $(this).find('input[type="checkbox"]').attr('id', timestamp + "-" + Id);
            $(this).find('label').attr('for', timestamp + "-" + Id);
        })
        var check = $(element).closest('.col-md-3').siblings('#Ingredients');
        console.log(check);
        $(element).closest('.col-md-3').siblings('#Ingredients').html(clone);

        $('.ingredient_name').on('click', function () {
            if ($(this).prop('checked')) {
                $(this).closest('.col-md-3').siblings('.col-md-2').find('#demo_vertical2').val(1);
            }
            else {
                $(this).closest('.col-md-3').siblings('.col-md-2').find('#demo_vertical2').val(0);
            }
        })
    }
    function IngredientUpFunction(element) {
        var input = $(element).parent().siblings('#demo_vertical2');
        var itemCount = $(element).parent().siblings('#demo_vertical2').val();
        var itemCount = parseInt(itemCount);
        itemCount += 1;
        if (itemCount <= 99) {
            $(input).val(itemCount);
        }
        $(element).closest('.col-md-2').prev('.col-md-3').find('input').prop('checked', true);
    }
    function IngredientDownFunction(element) {
        var input = $(element).parent().siblings('#demo_vertical2');
        var itemCount = $(element).parent().siblings('#demo_vertical2').val();
        var itemCount = parseInt(itemCount);
        itemCount -= 1;
        if (itemCount >= 0) {
            $(input).val(itemCount);
        }
        if (itemCount == 0) {
            $(element).closest('.col-md-2').prev('.col-md-3').find('input').prop('checked', false);
        }
    }
    function ShowProducts(Id, Id2) {
        var s = $('#' + Id).val();
        var element = $('#' + Id);
        ShowIngredients(s, element);
        $('#' + Id2).selectpicker('destroy');
        var options = $('#ProductSelect > optgroup[label="' + s + '"] > option').clone();
        $('#' + Id2).html("");
        $('#' + Id2).append(options);
        $('#' + Id2).selectpicker();
    }
    function ShowChangeProducts(element, element2) {
        var s = $(element).val();
        ShowIngredients(s, element);
        $(element2).selectpicker('destroy');
        var options = $('#ProductSelect > optgroup[label="' + s + '"] > option').clone();
        $(element2).html("");
        $(element2).append(options);
        $(element2).selectpicker();
    }
    function back() {
        $("#pay").addClass('d-none');
        $("#AddItem").removeClass('d-none');
    }
    function PlaceOrder() {
        
        var tableNumber = $('#tableNumber').val();
        var customer_name = $('#customer_name').val();
        var customer_email = $('#customer_email').val();
        var customer_phone = $('#customer_phone').val();
        var getProductsData = OrderCheck();
        
        getProductsData.table_num = tableNumber;
        getProductsData.customer_name = customer_name;
        getProductsData.customer_email = customer_email;
        getProductsData.customer_phone = customer_phone;
        if ($('#Takeaway').prop("checked")) {
            var orderType = 1;
        }
        else if ($('#dineIn').prop("checked")) {
            var orderType = 2;
        }
        else {
            var orderType = 0;
            var latitude = $('#lat').val();
            var longitude = $('#lng').val();
        }
        getProductsData.orderType = orderType;
        console.log("collected", getProductsData);
        var data = JSON.stringify({
            'orderType': orderType,
            'customer_name': customer_name,
            'customer_email': customer_email,
            'customer_phone': customer_phone,
            'table_num': tableNumber,
            'longitude': longitude,
            'latitude': latitude,
            'AllProducts': getProductsData.AllProducts,
            'price': getProductsData.price,
        });
        console.log("data", data);
        $('#PlaceOrderBtn').addClass('btn-progress');
        $.ajax({
            type: 'POST',
            url: '/Receptionist/Orders/PlaceOrder',
            data: data,
            async: true,
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: function (data) {
                console.log("Api", data);
                if (data.code == 200) {
                    TimerSweet("Order Placed!", "", "success", 2000);
                    $("#pay").addClass('d-none');
                    $("#confirmation").removeClass('d-none');
                    $('#OrderId').html("Your Order Number: #" + data.shortMessage);
                    $('#PlaceOrderBtn').removeClass('btn-progress');
                }
                else {
                    sweetMessage("Error!", data.shortMessage, "error");
                }
            },
            error: function (error) {
                return error;
            },
        });
    }
    function ToggleMap() {
        if ($('#delivery').prop("checked")) {
            $('#OrderLocation').show();
        }
        else {
            $('#OrderLocation').hide();
        }
    }
</script>
<script>
    function OrderCheck() {
        var allData = [];
        var Allprice = 0;
        $('.sectionClone').each(function (index) {
            var categoryId = $(this).find('#CategoryId').val();
            var productId = $(this).find('#ProductId').val();
            var price = $(this).find('#ProductId').find('option[value="' + productId + '"]').attr('data-price');
            var quantity = $(this).find('#demo_vertical2').val();
            var total_price = parseFloat(price) * parseInt(quantity);
            var ingredients = $(this).find('#Ingredients').find('input:checked');
            var listIn = [];
            var IngredientsPrice = 0;
            ingredients.each(function (index2) {
                var Id = $(this).attr('id');
                Id = Id.split('-');
                var price2 = $(this).attr('data-price');
                var Inquantity = $(this).closest('.col-md-3').siblings('.col-md-2').find('#demo_vertical2').val();
                var finalPrice = parseFloat(price2) * parseInt(Inquantity);
                var list = {
                    Id: Id[1],
                    quantity: Inquantity,
                    Price: finalPrice,
                }
                listIn.push(list);
                IngredientsPrice += finalPrice;
            })
            total_price += IngredientsPrice;
            var data = {
                categoryId: categoryId,
                productId: productId,
                quantity: quantity,
                ingredientList: listIn,
                total_price: total_price,
            };
            allData.push(data);
            Allprice += total_price;
        });
        var data2 = {
            AllProducts: allData,
            price: Allprice,
        }
        return data2;
    }
    function OrderCheck2() {
        $("#pay").addClass('d-none');
        $("#confirmation").removeClass('d-none');
        if ($('#Takeaway').prop("checked")) {
            var orderType = 1;
        }
        else {
            var orderType = 2;
        }
        var tableNumber = $('#tableNumber').val();
        var customer_name = $('#customer_name').val();
        var customer_email = $('#customer_email').val();
        var customer_phone = $('#customer_phone').val();
        var getProductsData = OrderCheck();
        getProductsData.orderType = orderType;
        getProductsData.table_num = tableNumber;
        getProductsData.customer_name = customer_name;
        getProductsData.customer_email = customer_email;
        getProductsData.customer_phone = customer_phone;
        console.log(getProductsData);
    }
</script>
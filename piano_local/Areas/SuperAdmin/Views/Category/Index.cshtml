@model IEnumerable<Entities.CategoryVms>
@inject piano_local.Resources.LocalizationService local
@{
    Layout = "~/Areas/SuperAdmin/Views/Shared/_Layout.cshtml";
}
<link href="~/assets/plugins/jquery-datatable/dataTables.bootstrap4.min.css" rel="stylesheet" />
<section class="content">
    <div class="block-header">
        <div class="row">
            <div class="col-12">
                <h2>
                    @local.GetLocalizedHtmlString("Categories Detail")
                </h2>
            </div>
        </div>
    </div>
    <div class="container-fluid">

        <!-- Exportable Table -->
        <div class="row clearfix">
            <div class="col-lg-12">
                <div class="card">
                    <div class="header">
                        <div style="display: inline-block;">
                            <button id="all" class="btn-sm btn-primary rounded font-12 mt-2">@local.GetLocalizedHtmlString("All")</button>
                            <button id="active" class="btn-sm btn-primary FilterButton rounded font-12 mt-2">@local.GetLocalizedHtmlString("Active")</button>
                            <button id="block" class="btn-sm btn-primary FilterButton rounded font-12 mt-2">@local.GetLocalizedHtmlString("Blocked")</button>
                        </div>
                        <div style="float: right;">
                            <button onclick="addNewModal()" class="btn btn-default waves-effect m-r-20">@local.GetLocalizedHtmlString("Add New Category")</button>
                        </div>
                    </div>
                    <div class="body">
                        <div class="table-responsive">
                            <table id="table-1" class="table table-bordered js-basic-example dataTable">
                                <thead class="no-wrap">
                                    <tr>
                                        <th>@local.GetLocalizedHtmlString("Branch")</th>
                                        <th>@local.GetLocalizedHtmlString("Name")</th>
                                        <th>@local.GetLocalizedHtmlString("Created At")</th>
                                        <th>@local.GetLocalizedHtmlString("Status")</th>
                                        <th>@local.GetLocalizedHtmlString("Action")</th>
                                    </tr>
                                </thead>
                                <tbody class="no-wrap">
                                    @foreach (var i in Model)
                                    {
                                        if (i.Status == Entities.Enum.EntityStatus.Active)
                                        {
                                            <tr data-row="1">
                                                <td>
                                                    @i.BranchName
                                                </td>
                                                <td>
                                                    @i.Name
                                                </td>

                                                <td>@i.CreatedAt</td>
                                                <td>
                                                    <div class="badge badge-success badge-shadow badge_width_height">Active</div>
                                                </td>
                                                <td class="text-center">
                                                    <div style="display:flex;flex-direction:row">
                                                        <a onclick="showEditModal('@i.Id')" class="btn-sm btn-default waves-effect waves-float waves-black"><i class="fas fa-edit"></i></a>
                                                        <a onclick="showBlockModal('@i.Id')" class="btn-sm btn-default waves-effect waves-float waves-black"><i class="fas fa-ban"></i></a>
                                                    </div>
                                                    <input type="hidden" id="n-@i.Id" value="@i.Name" />
                                                    <input type="hidden" id="b-@i.Id" value="@i.BranchId" />
                                                    <input type="hidden" id="bn-@i.Id" value="@i.BranchName" />
                                                </td>
                                            </tr>
                                        }
                                        else
                                        {
                                            <tr data-row="2">
                                                <td>
                                                    @i.BranchName
                                                </td>
                                                <td>
                                                    @i.Name
                                                </td>

                                                <td>@i.CreatedAt</td>
                                                <td>
                                                    <div class="badge badge-danger badge-shadow badge_width_height">Blocked</div>
                                                </td>
                                                <td class="text-center">
                                                    <div style="display:flex;flex-direction:row">
                                                        <a onclick="showUnBlockModal('@i.Id')" class="btn-sm btn-default waves-effect waves-float waves-black"><i class="fas fa-check-circle"></i></a>
                                                    </div>
                                                    <input type="hidden" id="n-@i.Id" value="@i.Name" />
                                                    <input type="hidden" id="b-@i.Id" value="@i.BranchId" />
                                                    <input type="hidden" id="bn-@i.Id" value="@i.BranchName" />
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- #END# Exportable Table -->
        <div class="modal fade mt-5" id="addcategory" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="title" id="defaultModalLabel">@local.GetLocalizedHtmlString("Add Category")</h4>
                    </div>
                    <div class="modal-body">
                        <form class="needs-validation" novalidate id="Form">
                            <input type="hidden" id="form_type" />
                            <input type="hidden" id="doc_id" />
                            <div class="row">
                                <div id="SelectBranch" class="col-md-12">
                                    <div class="form-group">
                                        <label>@local.GetLocalizedHtmlString("Select Branch")</label>
                                        @Html.DropDownList("BranchId", (IEnumerable<SelectListItem>)ViewBag.Branches, new { @class = "form-group form-float show-tick w-100 border-light" })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <label>@local.GetLocalizedHtmlString("Name")</label>
                                        <input type="text" id="Name" name="Name" class="form-control" placeholder="Name...">
                                    </div>
                                </div>
                            </div>
                            <div style="float:right">
                                <button type="button" class="btn btn-danger btn-round waves-effect" data-dismiss="modal">@local.GetLocalizedHtmlString("Cancel")</button>
                                <button onclick="AddCategory()" type="submit" class="btn btn-default btn-round waves-effect">@local.GetLocalizedHtmlString("Save")</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


<script>
    $('#Category').addClass('active');

    $("#active").click(function () {
        $('#active').removeClass('FilterButton');
        $('#active').siblings().addClass('FilterButton');
        var table = $('#table-1').DataTable();
        $.fn.dataTable.ext.search.pop();
        table.draw();
        $.fn.dataTable.ext.search.push(
            function (settings, data, dataIndex) {
                return $(table.row(dataIndex).node()).attr('data-row') == "1";
            }
        );
        table.draw();
    });
    $("#all").click(function () {
        $('#all').removeClass('FilterButton');
        $('#all').siblings().addClass('FilterButton');
        var table = $('#table-1').DataTable();
        $.fn.dataTable.ext.search.pop();
        table.draw();
    });
    $("#block").click(function () {
        $('#block').removeClass('FilterButton');
        $('#block').siblings().addClass('FilterButton');
        var table = $('#table-1').DataTable();
        $.fn.dataTable.ext.search.pop();
        table.draw();
        $.fn.dataTable.ext.search.push(
            function (settings, data, dataIndex) {
                return $(table.row(dataIndex).node()).attr('data-row') == "2";
            }
        );
        table.draw();

    });
</script>
<script>
    function showBlockModal(doc_id) {
        Swal.fire({
            title: 'Are you sure you want to block?',
            text: "",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Confirm!',
            showLoaderOnConfirm: true,
            preConfirm: (ref) => {
                return new Promise(async function (resolve, reject) {
                    var response = getResponseFromUrl('GET', '/SuperAdmin/Category/BlockEntity?id=' + doc_id);
                    if (response.code == 200) {
                        TimerSweet("Category Blocked!", 'Category is successfully blocked', "success", 2000);
                        setTimeout(function () {
                            location.reload();
                        }, 2000);
                    }
                    else {
                        sweetMessage("Error!", response.shortMessage, "error");
                    }
                })
            },
        }).then((result) => {
            if (result.isConfirmed) {

            }
        })
    }
    function showUnBlockModal(doc_id) {
        Swal.fire({
            title: 'Are you sure you want to unblock?',
            text: "",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Confirm!',
            showLoaderOnConfirm: true,
            preConfirm: (ref) => {
                return new Promise(async function (resolve, reject) {
                    var response = getResponseFromUrl('GET', '/SuperAdmin/Category/UnBlockEntity?id=' + doc_id);
                    if (response.code == 200) {
                        TimerSweet("Category Unblocked!", 'Category is successfully unblocked', "success", 2000);
                        setTimeout(function () {
                            location.reload();
                        }, 2000);
                    }
                    else {
                        sweetMessage("Error!", response.shortMessage, "error");
                    }
                })
            },
        }).then((result) => {
            if (result.isConfirmed) {

            }
        })
    }
</script>
<script>
    $('#Form').submit(function (e) {
        e.preventDefault();
    })
    function addNewModal() {
        $("#Form")[0].reset();
        $('#SelectBranch').show();
        $('#addcategory').modal("show");
        $('#form_type').val("1");
        $('#myModalLabel').html("Add Category");
    }
    function AddCategory() {

        var bool = true;
        var GetAllValues = [];
        var form_type = $('#form_type').val();
        $('#Form').find(('.form-control')).each(function (i, obj) {
            var values = getDataFromSimpleField($(obj));
            GetAllValues.push(values);
            if (GetAllValues.includes(false)) {
                bool = false;
            }
        })
        if (bool == false) {
            MixinSweet("Please fill all the required fields", "", "error", 2000);
        }
        else {
            $('#add_btn').addClass('btn-progress');
            var formdata = new FormData(document.getElementById('Form'));
            if (form_type == '1') {
            }
            else {
                var doc_id = $('#doc_id').val();
                formdata.append("catId", doc_id);
            }
            $.ajax({
                type: 'POST',
                url: '/SuperAdmin/Category/AddCategory',
                data: formdata,
                async: true,
                processData: false,
                contentType: false,
                success: function (data) {
                    console.log(data);
                    if (data.code == 200) {
                        if (form_type == '1') {
                            TimerSweet("Category Added!", 'Category is successfully added', "success", 2000);
                        }
                        else {
                            TimerSweet("Category Updated!", 'Category is successfully updated', "success", 2000);
                        }
                        $('#addcategory').modal('hide');
                        setTimeout(function () {
                            location.reload();
                        }, 1000);
                    }
                    else {
                        sweetMessage("Error!", data.shortMessage, "error");
                    }
                },
                error: function (error) {
                    return error;
                },
            });
        }
    }
    function getDataFromSimpleField(element) {
        var s = false;
        var value = $(element).val();

        if (value == "" || value == null || value == undefined) {
            s = false;
            $(element).addClass('is-invalid');
            $(element).removeClass('is-valid');
        }
        else if (!value.replace(/\s/g, '')[0].length) {
            s = false;
            $(element).addClass('is-invalid');
            $(element).removeClass('is-valid');
        }
        else {
            s = true;
            $(element).addClass('is-valid');
            $(element).removeClass('is-invalid');
        }
        if (s == false) {
            return false;
        }
        return true;
    }
</script>
<script>
    function showEditModal(id) {
        $("#Form")[0].reset();
        $('#SelectBranch').hide();
        $('#doc_id').val(id);
        $('#form_type').val('2');
        var name = $('#n-' + id).val();
        var branchId = $('#b-' + id).val();
        var branchName = $('#bn-' + id).val();
        $('#Name').val(name);
        $('#BranchId').find('[option="' + branchId+'"]').attr('selected');
        $('#myModalLabel').html("Edit Category");
        $('#addcategory').modal("show");
    }
</script>
<!--Ajax-->
<script>
    var getResponseFromUrl = function (requestType, requestUrl, requestData) {
        var response;
        $.ajax({
            type: requestType,
            url: requestUrl,
            data: requestData,
            data: requestData,
            async: false,
            processData: false,
            contentType: false,
            success: function (data) {
                response = data;
                console.log(data);
            },
            error: function (error) {
                return error;
            },
        });
        return response;
    }
</script>
@model Entities.GetStaffDashboardStats
@{
    Layout = "/Areas/PackerStaff/Views/Shared/_Layout.cshtml";
}
<section class="content home">
    <div class="block-header">
        <div class="row">
            <div class="col-12">
                <h2>
                    Dashboard
                </h2>
            </div>
        </div>
    </div>
    <div class="container-fluid">
        <div class="row">
            @if (Model.OrderDetails.Count() > 0 && !Model.OrderDetails.Any(p => p.WorkerStatus == Entities.Enum.WorkerStatus.Working))
            {
                <div class="col-12">
                    <button onclick="StartOrder()" class="btn btn-primary mb-4 px-5 bg-black font-19"><img src="~/admin-assets/images/food-pack (2).png" height="20" />Start Order</button>
                </div>
            }
            <div class="col-lg-8 col-sm-12 col-12">
                <div class="row">
                    @foreach (var i in Model.OrderDetails)
                    {
                        if (i.WorkerStatus == Entities.Enum.WorkerStatus.Waiting)
                        {
                            <div class="col-md-6 col-12 d-flex">
                                <div class="card project_widget p-1">
                                    <div class="pw_img m-auto d-flex">
                                        <img class="img-responsive w-25 m-auto" src="/cooking.png" alt="About the image">
                                    </div>
                                    <div class="pw_content mt-30">
                                        <div class="pw_header d-flex">
                                            <div>
                                                <h6>Order Id: #@i.OrderId</h6>
                                                <small class="text-muted">Datetime: @i.CreatedAt</small>
                                            </div>
                                            <a class="ml-auto mt-3 cursor-pointer" onclick="GetProductsDetails(@i.Id)"><u>Details</u></a>
                                        </div>
                                        <div class="pw_meta d-flex">
                                            <span>Amount: $@i.TotalPrice</span>
                                            <span class="text-danger ml-auto">Not Started</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="col-md-6 col-12 d-flex">
                                <div class="card project_widget p-1">
                                    <div class="pw_img m-auto d-flex">
                                        <img class="img-responsive w-25 m-auto" src="/cooking.png" alt="About the image">
                                    </div>

                                    <div class="d-flex mt-1">
                                        <div class="m-auto">
                                            @*<a title="Defect Order" class="cursor-pointer btn-sm btn-default waves-effect waves-float waves-black"><i class="fas fa-redo font-20 col-grey"></i> </a>*@
                                            <a onclick="MarkOrderAsPacked(@i.Id)" data-toggle="tooltip" title="Mark order as packed" class="cursor-pointer ml-3 btn-sm btn-default waves-effect waves-float waves-black"><img src="~/admin-assets/images/food-pack (1).png" width="25" height="25" /></a>
                                        </div>
                                    </div>

                                    <div class="pw_content">
                                        <div class="pw_header d-flex">
                                            <div>
                                                <h6>Order Id: #@i.OrderId</h6>
                                                <small class="text-muted">Datetime: @i.CreatedAt</small>
                                            </div>
                                            <a class="ml-auto mt-3 cursor-pointer" onclick="GetProductsDetails(@i.Id)"><u>Details</u></a>
                                        </div>
                                        <div class="pw_meta d-flex">
                                            <span>Amount: $@i.TotalPrice</span>
                                            <span class="text-warning ml-auto">In-process</span>
                                        </div>
                                        <div class="pw_meta" style="padding-top: 0px;">
                                            <span id="Timer"></span>
                                        </div>
                                        <input type="hidden" class="Timers" id="start-@i.Id" value="@i.StartTime" />
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
                <div hidden class="card">
                    <div class="body">
                        <ul class="pagination pagination-primary m-b-0">
                            <li class="page-item"><a class="page-link" href="#"><i class="zmdi zmdi-arrow-left"></i></a></li>
                            <li class="page-item active"><a class="page-link" href="#">1</a></li>
                            <li class="page-item"><a class="page-link" href="#">2</a></li>
                            <li class="page-item"><a class="page-link" href="#">3</a></li>
                            <li class="page-item"><a class="page-link" href="#">4</a></li>
                            <li class="page-item"><a class="page-link" href="#"><i class="zmdi zmdi-arrow-right"></i></a></li>
                        </ul>
                    </div>
                </div>
            </div>

            <div class="col-lg-4 col-sm-12 col-12">
                <div class="w-100">
                    <a href="@Url.Action("Orders","Order")" style="cursor:pointer" class="card info-box-2 hover-zoom-effect twitter-widget">
                        <div class="icon">
                            <img src="~/admin-assets/images/piano/cooking.png" class="mt-4 mb-2" height="35" />
                        </div>
                        <div class="content mb-2">
                            <div class="number">@Model.TotalOrders</div><div class="text">Assigned Orders</div>
                        </div>
                    </a>
                </div>

                <div class="w-100 mt-43">
                    <a href="@Url.Action("Orders","Order")" style="cursor:pointer" class="card info-box-2 hover-zoom-effect twitter-widget">
                        <div class="icon">
                            <img src="~/admin-assets/images/food-pack (2).png" class="mt-4 mb-2" height="35" />
                        </div>
                        <div class="content mb-2">
                            <div class="number">@Model.InProcessOrder</div><div class="text">In-process Orders</div>
                        </div>
                    </a>
                </div>

                <div class="w-100 mt-43">
                    <a href="@Url.Action("Orders","Order")" style="cursor:pointer" class="card info-box-2 hover-zoom-effect twitter-widget">
                        <div class="icon">
                            <img src="~/admin-assets/images/food-pack (2).png" class="mt-4 mb-2" height="35" />
                        </div>
                        <div class="content mb-2">
                            <div class="number">@Model.Completed</div><div class="text">Completed Orders</div>
                        </div>
                    </a>
                </div>

            </div>
        </div>
    </div>

    <div class="modal fade bs-example-modal-md mt-5" id="PrdDtls" tabindex="-1" role="dialog" aria-labelledby="PrdDtls" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="formModal">Products Detail</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row" id="AppendProducts">

                    </div>
                    <div class="row">
                        <div class="col-12">
                            <div class="float-right">
                                <b>Total Bill: </b> <span id="TotalPrice">800</span>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div><!-- /.modal -->
    </div>
</section>

<script>
    $("[data-toggle='tooltip']").tooltip();
    $('#Dash').addClass('active');
    $('#Dash').addClass('open');
</script>
<script>
    $(function () {
        $('.Timers').each(function (index, obj) {
            var s = $(obj).val();
            s = new Date(s);
            var newTime = new Date();
            var different = newTime.getTime() - s.getTime();

            console.log("startDate : " + s);
            console.log("endDate : " + newTime);
            console.log("different : " + different);

            var secondsInMilli = 1000;
            var minutesInMilli = secondsInMilli * 60;
            var hoursInMilli = minutesInMilli * 60;

            var elapsedHours = different / hoursInMilli;
            different = different % hoursInMilli;

            var elapsedMinutes = different / minutesInMilli;
            different = different % minutesInMilli;
            elapsedMinutes += parseInt(elapsedHours) * 60;
            var elapsedSeconds = different / secondsInMilli;
            console.log("%d hours, %d minutes, %d seconds%n",
                elapsedHours, elapsedMinutes, elapsedSeconds);
            var objectToUpdate = $(obj).siblings('.pw_meta').find('#Timer');
            startTimer(elapsedMinutes, elapsedSeconds, objectToUpdate);
        })
    })
    function startTimer(duration, elapsedSeconds, display) {
        var timer = duration * 60;
        var seconds = elapsedSeconds;
        var hours = 0;
        var minutes = duration;
        var count = 0;
        setInterval(function () {
            console.log("timer", timer);
            minutes = parseInt(timer / 60, 10);
            seconds = parseInt(timer % 60, 10);
            if (minutes > 60) {
                hours = parseInt(minutes / 60);
                hours = hours < 10 ? "0" + hours : hours;
            }
            minutes = minutes < 10 ? "0" + minutes : minutes;
            seconds = seconds < 10 ? "0" + seconds : seconds;
            var displayMinutes = parseInt(minutes);
            displayMinutes = displayMinutes > 60 ? displayMinutes % 60 : displayMinutes;
            if (hours > 0) {
                $(display).html(hours + ":" + displayMinutes + ":" + seconds);
            }
            else {
                $(display).html(displayMinutes + ":" + seconds);
            }

            if (++timer < 0) {
                timer = minutes;
            }
            count++;
        }, 1000);
    }
</script>
<script>
    function GetProductsDetails(Id) {
        var response = getResponseFromUrl('Get', '/packerStaff/main/GetProducts?Id=' + Id, null, false);
        response = response.responseJSON;
        if (response.code == 200) {
            var result = response.result;
            if (result.length > 0) {
                var price = 0;
                $('#AppendProducts').html("");
                result.forEach(function (doc) {
                    var data = doc;
                    console.log("list", data.ingredientList);
                    var s = "";
                    data.ingredientList.forEach(function (item) {
                        s += `<div class="flex-row">
                                            <small class="text-muted"><b><i class="fas fa-circle font-8 mr-2"></i>${item.ingredientName}: </b></small> <small class="ml-2">${item.quantity} Qty</small>
                                        </div>`;
                    });
                    var product = `<div class="col-12">
                            <div class="card project_widget p-1">
                                <div class="d-flex">
                                    <img class="img-responsive" width="70" height="70" src="${data.productImage}" alt="About the image">
                                    <div class="ml-3 mt-2">
                                        <p class="mb-0">${data.productName}</p>
                                        ${s}
                                    </div>
                                    <div class="ml-auto">
                                        <span>${data.quantity} Qty</span>
                                    </div>
                                </div>
                            </div>
                        </div>`;
                    price += data.total_price;
                    $('#AppendProducts').append(product);
                })
                $('#TotalPrice').html("$" + price);
                $('#PrdDtls').modal("show");
            }
        }
        else {
            console.log(response);
            sweetMessage("Error!", response.shortMessage + "<br>" + response.result, "error");
        }
    }
</script>
<script>
    function StartOrder() {
        Swal.fire({
            title: 'Are you sure you start working?',
            text: "",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            showLoaderOnConfirm: true,
            preConfirm: (ref) => {
                return new Promise(async function (resolve, reject) {
                    var response = await getResponseFromUrl('Get', '/packerStaff/main/startOrder', null, true);
                    if (response.code == 200) {
                        MixinSweet("Success", "", "success", 2000);
                        setTimeout(function () {
                            location.reload();
                        }, 2000);
                    }
                    else {
                        MixinSweet(response.shortMessage, "", "success", 2000);
                    }
                })
            },
            confirmButtonText: 'Confirm!'
        }).then((result) => {
            if (result.isConfirmed) {
            }
        })
    }
    function MarkOrderAsPacked(Id) {
        Swal.fire({
            title: 'Are you sure you want mark this order as packed?',
            text: "",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            showLoaderOnConfirm: true,
            preConfirm: (ref) => {
                return new Promise(async function (resolve, reject) {
                    var response = await getResponseFromUrl('Get', '/packerStaff/main/MarkOrderAsPacked?Id=' + Id, null, true);
                    if (response.code == 200) {
                        MixinSweet("Success", "", "success", 2000);
                        setTimeout(function () {
                            location.reload();
                        }, 2000);
                    }
                    else {
                        MixinSweet(response.shortMessage, "", "success", 2000);
                    }
                })
            },
            confirmButtonText: 'Confirm!'
        }).then((result) => {
            if (result.isConfirmed) {
            }
        })
    }
</script>
<!--Ajax-->
<script>
    var getResponseFromUrl = function (requestType, requestUrl, requestData, async) {
        var response;
        return $.ajax({
            type: requestType,
            url: requestUrl,
            data: requestData,
            async: async,
            processData: false,
            contentType: false,
            success: function (data) {
                response = data;
                return response;
            },
            error: function (error) {
                return error;
            },
        });
    }
</script>
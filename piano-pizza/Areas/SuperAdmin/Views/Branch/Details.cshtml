@model IEnumerable<Entities.BranchVms>
@inject piano_pizza.Resources.LocalizationService local
@{
    Layout = "~/Areas/SuperAdmin/Views/Shared/_Layout.cshtml";
}
<section class="content">
    <div class="block-header">
        <div class="row">
            <div class="col-12">
                <h2>
                    @local.GetLocalizedHtmlString("BranchDetails")
                </h2>
            </div>
        </div>
    </div>
    <div class="container-fluid">
        <!-- Exportable Table -->
        <div class="row clearfix">
            <div class="col-lg-12">
                <div class="card">

                    <div class="header">
                        <div style="display: inline-block;">
                            <button id="all" class="btn-sm btn-primary rounded font-12 mt-2">@local.GetLocalizedHtmlString("All")</button>
                            <button id="active" class="btn-sm btn-primary FilterButton rounded font-12 mt-2">@local.GetLocalizedHtmlString("Active")</button>
                            <button id="block" class="btn-sm btn-primary FilterButton rounded font-12 mt-2">@local.GetLocalizedHtmlString("Blocked")</button>
                        </div>
                        <div style="float: right;">
                            <button onclick="addNewModal()" id="block" class="btn btn-default waves-effect m-r-20">@local.GetLocalizedHtmlString("Add New Branch")</button>
                        </div>
                    </div>
                    <div class="body">
                        <div class="table-responsive">
                            <table class="table js-basic-example dataTable">
                                <thead class="no-wrap">
                                    <tr>
                                        <th>@local.GetLocalizedHtmlString("Name")</th>
                                        <th class="text-center">@local.GetLocalizedHtmlString("Location")</th>
                                        <th>@local.GetLocalizedHtmlString("Phone")</th>
                                        <th>@local.GetLocalizedHtmlString("Email")</th>
                                        <th class="text-center">@local.GetLocalizedHtmlString("Description")</th>
                                        <th class="text-center">@local.GetLocalizedHtmlString("Status")</th>
                                        <th class="text-center">@local.GetLocalizedHtmlString("Action")</th>
                                    </tr>
                                </thead>
                                <tbody class="no-wrap">
                                    @foreach (var i in Model)
                                    {
                                        if (i.Status == Entities.Enum.EntityStatus.Active)
                                        {
                                            <tr data-row="1">
                                                <td>
                                                    <a href="@i.Image">
                                                        <img class="rounded shadow" src="@i.Image" height="35">
                                                    </a>
                                                    <span class="w-space-no ml-2">@i.Name</span>
                                                </td>
                                                <td class="align-middle text-center"><a href="http://www.google.com/maps/place/@i.Latitude,@i.Longitude" target="_blank"><i class="fas fa-map-marker-alt"></i></a></td>
                                                <td>@i.Phone</td>
                                                <td>@i.Email</td>
                                                <td class="align-middle text-center">
                                                    <a onclick="ShowDescription(@i.Id)" class="btn-sm btn-primary description"><i class="zmdi zmdi-eye text-white"></i></a>
                                                </td>
                                                <td>
                                                    <div class="badge badge-success badge-shadow badge_width_height">Active</div>
                                                </td>
                                                <td class="text-center">
                                                    <div style="display:flex;flex-direction:row">
                                                        <a onclick="showEditModal('@i.Id')" class="btn-sm btn-default waves-effect waves-float waves-black"><i class="fas fa-edit"></i></a>
                                                        <a onclick="showBlockModal('@i.Id')" class="btn-sm btn-default waves-effect waves-float waves-black"><i class="fas fa-ban"></i></a>
                                                    </div>
                                                    <input type="hidden" id="n-@i.Id" value="@i.Name" />
                                                    <input type="hidden" id="m-@i.Id" value="@i.Image" />
                                                    <input type="hidden" id="i-@i.Id" value="@i.Description" />
                                                    <input type="hidden" id="p-@i.Id" value="@i.Phone" />
                                                    <input type="hidden" id="e-@i.Id" value="@i.Email" />
                                                    <input type="hidden" id="lat-@i.Id" value="@i.Latitude" />
                                                    <input type="hidden" id="long-@i.Id" value="@i.Longitude" />
                                                    <input type="hidden" id="a-@i.Id" value="@i.Address" />
                                                </td>
                                            </tr>
                                        }
                                        else
                                        {
                                            <tr data-row="2">
                                                <td>
                                                    <a href="@i.Image">
                                                        <img class="rounded shadow" src="@i.Image" height="35">
                                                    </a>
                                                    <span class="w-space-no ml-2">@i.Name</span>
                                                </td>
                                                <td class="align-middle text-center"><a href="http://www.google.com/maps/place/@i.Latitude,@i.Longitude" target="_blank"><i class="fas fa-map-marker-alt"></i></a></td>
                                                <td>@i.Phone</td>
                                                <td>@i.Email</td>
                                                <td class="align-middle text-center">
                                                    <a onclick="ShowDescription(@i.Id)" class="btn-sm btn-primary description"><i class="zmdi zmdi-eye text-white"></i></a>
                                                </td>
                                                <td>
                                                    <div class="badge badge-danger badge-shadow badge_width_height">Blocked</div>
                                                </td>
                                                <td class="text-center">
                                                    <div style="display:flex;flex-direction:row">
                                                        <a onclick="showUnBlockModal('@i.Id')" class="btn-sm btn-default waves-effect waves-float waves-black"><i class="fas fa-check-circle"></i></a>
                                                    </div>
                                                    <input type="hidden" id="n-@i.Id" value="@i.Name" />
                                                    <input type="hidden" id="m-@i.Id" value="@i.Image" />
                                                    <input type="hidden" id="i-@i.Id" value="@i.Description" />
                                                    <input type="hidden" id="p-@i.Id" value="@i.Phone" />
                                                    <input type="hidden" id="e-@i.Id" value="@i.Email" />
                                                    <input type="hidden" id="lat-@i.Id" value="@i.Latitude" />
                                                    <input type="hidden" id="long-@i.Id" value="@i.Longitude" />
                                                    <input type="hidden" id="a-@i.Id" value="@i.Address" />
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade bs-example-modal-md mt-5" id="des" tabindex="-1" role="dialog" aria-labelledby="des" aria-hidden="true">
            <div class="modal-dialog modal-md">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="formModal">@local.GetLocalizedHtmlString("Details")</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">×</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-md-12">
                                <p id="descriptionDtl"></p>
                            </div>
                        </div>
                    </div>
                </div>
            </div><!-- /.modal -->
        </div>
        <!-- Add New  modal -->
        <div class="modal fade" id="addModal" tabindex="-1" role="dialog" style="display: none;" aria-hidden="true">
            <div class="modal-dialog modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="title" id="myModalLabel">Branch</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">×</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <form class="" autocomplete="off" id="Form">
                            <input type="hidden" id="form_type" />
                            <input type="hidden" id="doc_id" />
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Name*</label>
                                        <input type="text" maxlength="52" class="form-control" placeholder="Enter Name" id="Name" name="name" />
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Phone*</label>
                                        <input type="text" class="form-control" placeholder="Enter Phone" id="Phone" name="Phone" />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Email*</label>
                                        <input type="email" class="form-control" placeholder="Enter Email" id="Email" name="Email" />
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <label>Description*</label>
                                        <textarea maxlength="200" class="form-control" rows="2" id="desc" name="Description"></textarea>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="custom-file-container" data-upload-id="myFirstImage">
                                        <label style="color:black">* Logo <a href="javascript:void(0)" class="custom-file-container__image-clear" title="Clear Image">x</a></label>
                                        <label class="custom-file-container__custom-file">
                                            <input type="file" class="custom-file-container__custom-file__custom-file-input" accept="image/*" id="LogoImageFile" name="Image">
                                            <input type="hidden" name="MAX_FILE_SIZE" value="10485760" />
                                            <span class="custom-file-container__custom-file__custom-file-control"></span>
                                        </label>
                                        <div class="custom-file-container__image-preview"></div>
                                    </div>
                                </div>
                                <div class="col-12 mt-2">
                                    <div class="form-group">
                                        <label>Map Location</label>
                                        <div class="input-group">
                                            <input type="hidden" class="form-control" name="Latitude" id="lat" value="-33.878358" />
                                            <input type="hidden" class="form-control" name="Longitude" id="lng" value="151.1835443" />
                                            <input style="width:90%;z-index:2147483647;" id="autocomplete_search" name="Address" type="text" class="form-control rounded" placeholder="Search Location" />
                                            <br />
                                            <div class="form-group" style="width: 100%;">
                                                <div id="map" style="width:100%; height:400px;padding:10px;margin-top:10px;"></div>
                                                <button hidden id="MyLocator" style="background-color: rgb(255, 255, 255);box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 4px -1px;display: block;border: 0px;margin: 0px; padding: 0px;text-transform: none;position: relative;cursor: pointer;user-select: none;overflow: hidden;width: 40px;height: 40px;top: -250px;float: right;right: 11px;">
                                                </button>
                                            </div>
                                            <label id="lab" style=" position: relative;top: -69px;font-size: 16px;font-weight: 500;"></label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <a class="btn btn-default waves-effect" style="margin-left:auto;" data-dismiss="modal">Close</a>
                        <button type="submit" onclick="AddBranch()" id="add_btn" class="btn btn-primary btn btn-primary waves-effect waves-light"><i style="margin-right:4px;" class="fa fa-check-circle"></i>Submit</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<script>
    $('#BranchDtls').addClass('active');
    $('#Branch').addClass('toggled');

    $("#active").click(function () {
        $('#active').removeClass('FilterButton');
        $('#active').siblings().addClass('FilterButton');
        var table = $('#table-1').DataTable();
        $.fn.dataTable.ext.search.pop();
        table.draw();
        $.fn.dataTable.ext.search.push(
            function (settings, data, dataIndex) {
                return $(table.row(dataIndex).node()).attr('data-row') == "1";
            }
        );
        table.draw();
    });
    $("#all").click(function () {
        $('#all').removeClass('FilterButton');
        $('#all').siblings().addClass('FilterButton');
        var table = $('#table-1').DataTable();
        $.fn.dataTable.ext.search.pop();
        table.draw();
    });
    $("#block").click(function () {
        $('#block').removeClass('FilterButton');
        $('#block').siblings().addClass('FilterButton');
        var table = $('#table-1').DataTable();
        $.fn.dataTable.ext.search.pop();
        table.draw();
        $.fn.dataTable.ext.search.push(
            function (settings, data, dataIndex) {
                return $(table.row(dataIndex).node()).attr('data-row') == "2";
            }
        );
        table.draw();

    });
</script>
<script>
    function showBlockModal(doc_id) {
        Swal.fire({
            title: 'Are you sure you want to block?',
            text: "",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Confirm!',
            showLoaderOnConfirm: true,
            preConfirm: (ref) => {
                return new Promise(async function (resolve, reject) {
                    var response = getResponseFromUrl('GET', '/SuperAdmin/Branch/BlockEntity?id=' + doc_id);
                    if (response.code == 200) {
                        TimerSweet("Branch Blocked!", 'Branch is successfully blocked', "success", 2000);
                        setTimeout(function () {
                            location.reload();
                        }, 2000);
                    }
                    else {
                        sweetMessage("Error!", response.shortMessage, "error");
                    }
                })
            },
        }).then((result) => {
            if (result.isConfirmed) {

            }
        })
    }
    function showUnBlockModal(doc_id) {
        Swal.fire({
            title: 'Are you sure you want to unblock?',
            text: "",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Confirm!',
            showLoaderOnConfirm: true,
            preConfirm: (ref) => {
                return new Promise(async function (resolve, reject) {
                    var response = getResponseFromUrl('GET', '/SuperAdmin/Branch/UnBlockEntity?id=' + doc_id);
                    if (response.code == 200) {
                        TimerSweet("Staff Unblocked!", 'Staff is successfully unblocked', "success", 2000);
                        setTimeout(function () {
                            location.reload();
                        }, 2000);
                    }
                    else {
                        sweetMessage("Error!", response.shortMessage, "error");
                    }
                })
            },
        }).then((result) => {
            if (result.isConfirmed) {

            }
        })
    }
</script>
<script>
    function ShowDescription(doc_id) {
        var desc = $('#i-' + doc_id).val();
        $('#des').modal("show");
        $('#descriptionDtl').html(desc);
    }
</script>
<script>
    function addNewModal() {
        $("#Form")[0].reset();
        $('#addModal').modal("show");
        $('#form_type').val("1");
        var first = new FileUploadWithPreview('myFirstImage');
        $('#myModalLabel').html("Add Branch");
    }
    function AddBranch() {
        var bool = true;
        var GetAllValues = [];
        var form_type = $('#form_type').val();
        if (form_type == '1') {
            var files = $('#LogoImageFile')[0].files[0];
            if (files == null) {
                sweetMessage("Warning!", "Please Select Logo", "error", 2000);
                return false;
            }
            $('#Form').find(('.form-control,.custom-file-container__custom-file__custom-file-input')).each(function (i, obj) {
                var values = getDataFromSimpleField($(obj));
                GetAllValues.push(values);
                if (GetAllValues.includes(false)) {
                    bool = false;
                }
            })
        }
        else {
            $('#Form').find(('.form-control')).each(function (i, obj) {
                var values = getDataFromSimpleField($(obj));
                GetAllValues.push(values);
                if (GetAllValues.includes(false)) {
                    bool = false;
                }
            })
        }
        if (bool == false) {
            MixinSweet("Please fill all the required fields", "", "error", 2000);
        }
        else {
            $('#add_btn').addClass('btn-progress');
            var formdata = new FormData(document.getElementById('Form'));
            if (form_type == '1') {
            }
            else {
                var doc_id = $('#doc_id').val();
                formdata.append("branchId", doc_id);
            }
            $.ajax({
                type: 'POST',
                url: '/SuperAdmin/Branch/AddBranch',
                data: formdata,
                async: true,
                processData: false,
                contentType: false,
                success: function (data) {
                    console.log(data);
                    if (data.code == 200) {
                        if (form_type == '1') {
                            TimerSweet("Branch Added!", 'Branch is successfully added', "success", 2000);
                        }
                        else {
                            TimerSweet("Branch Updated!", 'Branch is successfully updated', "success", 2000);
                        }
                        $('#addModal').modal('hide');
                        setTimeout(function () {
                            location.reload();
                        }, 1000);
                    }
                    else {
                        sweetMessage("Error!", data.shortMessage, "error");
                    }
                },
                error: function (error) {
                    return error;
                },
            });
        }
    }
    function getDataFromSimpleField(element) {
        var s = false;
        var value = $(element).val();
        
        if (value == "" || value == null || value == undefined) {
            s = false;
            $(element).addClass('is-invalid');
            $(element).removeClass('is-valid');
            if ($(element).hasClass('custom-file-container__custom-file__custom-file-input')) {
                $(element).siblings('span').addClass('red_border');
                $(element).siblings('span').removeClass('none_border');
            }
        }
        else if (!value.replace(/\s/g, '')[0].length) {
            s = false;
            $(element).addClass('is-invalid');
            $(element).removeClass('is-valid');
            if ($(element).hasClass('custom-file-container__custom-file__custom-file-input')) {
                $(element).siblings('span').addClass('red_border');
                $(element).siblings('span').removeClass('none_border');
            }
        }
        else {
            s = true;
            $(element).addClass('is-valid');
            $(element).removeClass('is-invalid');
            if ($(element).hasClass('custom-file-container__custom-file__custom-file-input')) {
                $(element).siblings('span').removeClass('red_border');
                $(element).siblings('span').addClass('none_border');
            }
        }
        if (s == false) {
            return false;
        }
        return true;
    }
</script>
<script>
    function showEditModal(id) {
        $("#Form")[0].reset();
        $('#doc_id').val(id);
        $('#form_type').val('2');
        var name = $('#n-' + id).val();
        var logo = $('#m-' + id).val();
        var desc = $('#i-' + id).val();
        var phone = $('#p-' + id).val();
        var email = $('#e-' + id).val();
        var lat = $('#lat-' + id).val();
        var long = $('#long-' + id).val();
        var address = $('#a-' + id).val();
        $('#Name').val(name);
        $('#desc').val(desc);
        $('#Phone').val(phone);
        $('#Email').val(email);
        $('#Latitude').val(lat);
        $('#Longitude').val(long);
        $('#autocomplete_search').val(address);
        var first = new FileUploadWithPreview('myFirstImage', {
            presetFiles: [
                logo
            ],
        })
        initMap(lat, long);
        $('#myModalLabel').html("Edit Branch");
        $('#addModal').modal("show");
    }
</script>
<!--Ajax-->
<script>
    var getResponseFromUrl = function (requestType, requestUrl, requestData) {
        var response;
        $.ajax({
            type: requestType,
            url: requestUrl,
            data: requestData,
            data: requestData,
            async: false,
            processData: false,
            contentType: false,
            success: function (data) {
                response = data;
                console.log(data);
            },
            error: function (error) {
                return error;
            },
        });
        return response;
    }
</script>
<script async defer type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCt7JTzt_AoYGTPLoHIwYt8vw0vkjErorc&libraries=places&callback=initMap"></script>
<script type="text/javascript">
    var marker;
    var map;
    var radius = 10000;
    var geocoder;
    function initMap(latitude,longitude) {
        search_lat = "";
        search_lng = "";
        formattedAddress = "";
        latitude = parseFloat(latitude) ?? -33.878358;
        longitude = parseFloat(longitude) ?? 151.1835443;
        var input = document.getElementById('autocomplete_search');
        map = new google.maps.Map(document.getElementById('map'), {
            zoom: 11,
            center: { lat: latitude, lng: longitude }
        });
        // var geoloccontrol = new klokantech.GeolocationControl(map, 11);
        marker = new google.maps.Marker({
            map: map,
            draggable: true,
            zoom: 11,
            animation: google.maps.Animation.DROP,
            position: { lat: latitude, lng: longitude }
        });
        marker.addListener('click', toggleBounce);
        markerCoords(marker);
        geocoder = new google.maps.Geocoder();
        var autocomplete = new google.maps.places.Autocomplete(input);
        autocomplete.addListener('place_changed', function () {
            var place = autocomplete.getPlace();
            // place variable will have all the information you are looking for.
            $('#lat').val(place.geometry['location'].lat());
            $('#long').val(place.geometry['location'].lng());
            search_lat = place.geometry['location'].lat();
            search_lng = place.geometry['location'].lng();
            $("#address").html(place.formatted_address);
            $("#autocomplete_search").val(place.formatted_address);

            //setCountryStateCity(place, false);
            // SETTING LAT LNG
            $("#lat").val(search_lat);
            $("#lng").val(search_lng);
            map = new google.maps.Map(document.getElementById('map'), {
                zoom: 18,
                center: { lat: search_lat, lng: search_lng }
            });
            marker = new google.maps.Marker({
                map: map,
                draggable: true,
                zoom: 18,
                animation: google.maps.Animation.DROP,
                position: { lat: search_lat, lng: search_lng }
            });
            marker.addListener('click', toggleBounce);
            markerCoords(marker);
            var latlng = new google.maps.LatLng(search_lat, search_lng);
            map.setCenter(latlng);
            console.log('init Map', search_lat);
        });
    }
    function toggleBounce() {
        if (marker.getAnimation() !== null) {
            marker.setAnimation(null);
        } else {
            marker.setAnimation(google.maps.Animation.BOUNCE);
        }
    }
    function markerCoords(markerobject) {
        google.maps.event.addListener(markerobject, 'dragend', function (evt) {
            var newlat = evt.latLng.lat().toFixed(3);
            var newlng = evt.latLng.lng().toFixed(3);
            geocoder.geocode({
                latLng: new google.maps.LatLng(newlat, newlng)
            }, function (responses) {
                if (responses && responses.length > 0) {
                    //setCountryStateCity(responses, true);
                    $("#address").html(responses[0].formatted_address);
                    $("#autocomplete_search").val(responses[0].formatted_address);
                }
                else {
                    console.log('Cannot determine address at this location.');
                }
            });
            $("#lat").val(newlat);
            $("#lng").val(newlng);
            console.log(newlat, " drag value");

        });
    }
    $("#MyLocator").on("click", function () {
        getLocation();
    })
    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(showPosition);
        }
        else {
            var latitude = "-33.878358";
            var longitude = "151.1835443";
            $("#lat").val("-33.878358");
            $("#lng").val("151.1835443");
            map = new google.maps.Map(document.getElementById('map'), {
                zoom: 18,
                center: { lat: latitude, lng: longitude }
            });
            marker = new google.maps.Marker({
                map: map,
                draggable: true,
                zoom: 2,
                animation: google.maps.Animation.DROP,
                position: { lat: latitude, lng: longitude }
            });
            marker.addListener('click', toggleBounce);
            //radius = 1000;
            markerCoords(marker);
            var latlng = new google.maps.LatLng(latitude, longitude);
            map.setCenter(latlng);
            $("#autocomplete_search").val(map.formatted_address);
            alert("Geolocation is not supported by this browser.");
        }
    }
    function showPosition(position) {
        map = new google.maps.Map(document.getElementById('map'), {
            zoom: 18,
            center: { lat: position.coords.latitude, lng: position.coords.longitude }
        });
        marker = new google.maps.Marker({
            map: map,
            draggable: true,
            zoom: 2,
            animation: google.maps.Animation.DROP,
            position: { lat: position.coords.latitude, lng: position.coords.longitude }
        });
        marker.addListener('click', toggleBounce);
        markerCoords(marker);
        var latlng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
        map.setCenter(latlng);
        $("#lat").val(position.coords.latitude);
        $("#lng").val(position.coords.longitude);
        console.log("Show position ", position.coords.latitude);
    }
</script>
@inject piano_pizza.Resources.LocalizationService local
@{
    Layout = "~/Areas/SuperAdmin/Views/Shared/_Layout.cshtml";
}
<section class="content">
    <div class="block-header">
        <div class="row">
            <div class="col-12">
                <h2>
                    @local.GetLocalizedHtmlString("Add Ingredients")<img src="~/admin-assets/images/piano/Bg-transparent/Ingredient-removebg-preview.png" height="30" class="ml-2" />
                </h2>
            </div>
        </div>
    </div>
    <div class="container-fluid">
        <!-- Basic Validation -->
        <div class="row clearfix">
            <div class="col-lg-12 col-md-12 col-sm-12">
                <div class="card">
                    <div class="body">
                        <form id="Form">
                            <div id="form_validation" method="POST">
                                <div class="row mt-4">
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>@local.GetLocalizedHtmlString("Select Branch")*</label>
                                            @Html.DropDownList("BranchId", (IEnumerable<SelectListItem>)ViewBag.Branches, new { @class = "form-group form-float selectLists show-tick w-100 border-light", onchange = "ShowCategories()" })
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>@local.GetLocalizedHtmlString("Select Category")*</label>
                                            <select id="CategoryId" name="CategoryId" class="form-group selectLists form-float show-tick w-100 border-light" onchange="ShowProducts()">
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>@local.GetLocalizedHtmlString("Select Product")</label>
                                            <select id="ProductId" name="ProductId" class="form-group  form-float show-tick w-100 border-light">
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-12">
                                        <div class="row">
                                            <div class="col-md-3">
                                                <a onclick="AddForm()" class="btn btn-raised btn-primary btn-round waves-effect mb-4" style="color: #fff;">Add Ingrendient</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div id="targetDIV">

                                </div>
                                <a onclick="AddIngredient()" class="btn btn-raised btn-primary btn-round waves-effect mb-4" style="float:right;color:#fff;">@local.GetLocalizedHtmlString("SUBMIT")</a>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <!-- #END# Basic Validation -->
        <div style="display:none">
            <select id="CategorySelect">
                @foreach (var i in (IEnumerable<SelectListItem>)ViewBag.Categories)
                {
                    <optgroup label="@i.Group.Name">
                        <option value="@i.Value">@i.Text</option>
                    </optgroup>
                }
            </select>
            <select id="ProductSelect">
                @foreach (var i in (IEnumerable<SelectListItem>)ViewBag.Products)
                {
                    <optgroup label="@i.Group.Name">
                        <option value="@i.Value">@i.Text</option>
                    </optgroup>
                }
            </select>
        </div>
    </div>
</section>

<script>
    $(function () {
        $('#product').addClass('toggled');
        $('#AddIngredient').addClass('active');
        ShowCategories();
        ShowProducts();
    })
    function ShowCategories() {
        var s = $('#BranchId').val();
        $('#CategoryId').selectpicker('destroy');
        var options = $('#CategorySelect > optgroup[label="' + s + '"] > option').clone();
        $('#CategoryId').html(options);
        $('#CategoryId').selectpicker();
        ShowProducts();
    }
    function ShowProducts() {
        var s = $('#CategoryId').val();
        $('#ProductId').selectpicker('destroy');
        var options = $('#ProductSelect > optgroup[label="' + s + '"] > option').clone();
        $('#ProductId').html("");
        $('#ProductId').html('<option value="" disabled selected>----Select Product----</option>');
        $('#ProductId').append(options);
        $('#ProductId').selectpicker();
    }
    function AddForm() {
        var targetDiv = $("#targetDIV");
        targetDiv.append('<div class="mb-3 p-2 border rounded">' +
            '<div class="form-row">' +
            '<div class="col-md-12">'+
            '<a onclick="DeleteThisForm(this)" class="btn btn-raised btn-danger btn-round waves-effect mb-4" style="color:#fff;float: right;margin-bottom: 0px !important;">Remove</a>'+
            '</div>'+
            '<div class="form-group col-md-6 col-sm-12 col-12">' +
            '<label>Ingredient Name*</label>' +
            '<input type="text" class="form-control name" placeholder="Enter Name..." required>' +
            '</div>' +
            '<div class="form-group col-md-6 col-sm-12 col-12">' +
            '<label>Price*</label>' +
            '<input type="number" class="form-control price float_valid" placeholder="Enter Price..." required>' +
            '</div>' +
            '</div>' +
            '</div>');
        $(".float_valid").keypress(function () {
            return event.charCode >= 48 && event.charCode <= 57 || event.charCode == 46;
        });
        $(".float_valid").keyup(function (elem) {
            var val = $(this).val();

            var tmp = $(this).val().replace(/^0+/, '0');
            if (tmp.charAt(0) == 0 && tmp.charAt(1) > 0) {
                tmp = 0;
            }
            $(this).val(tmp);

            var fixer = 0;
            if (val.includes(".")) {
                if (tmp.charAt(0) == ".") {
                    $(this).val(fixer);
                }
                // IF DOUBLE MINUS APPEARS
                else if ((val.match(/\./g).length) > 1) {
                    $(this).val(fixer);
                }
            }
        });
        $(".float_valid").on('input', function (elem) {
            var t = $(this).val();
            $(this).val((t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), 3)) : t);
        });
    }
    function DeleteThisForm(element) {
        $(element).closest('.mb-3').remove();
    }
    function AddIngredient() {
        var bool = true;
        var GetAllValues = [];
        $('#Form').find(('.form-control,.selectLists')).each(function (i, obj) {
            if (!$(obj).hasClass('dropdown')) {
                var values = getDataFromSimpleField($(obj));
                GetAllValues.push(values);
                if (GetAllValues.includes(false)) {
                    bool = false;
                }
            }
        })
        if (bool == false) {
            MixinSweet("Please fill all the required fields", "", "error", 2000);
        }
        else {
            var list = [];
            $('#Form').find(('.form-row')).each(function (i, obj) {
                var name = "";
                var price = "";
                $(obj).find('.form-control').each(function (i, childObj) {
                    if ($(childObj).hasClass('name')) {
                        name = $(childObj).val();
                    }
                    else {
                        price = $(childObj).val();
                    }
                })
                var data = {
                    name: name,
                    price: price,
                }
                list.push(data);
            })
            console.log(list);

            var data = JSON.stringify({
                        'branchId': $('#BranchId').val(),
                        'categoryId': $('#CategoryId').val(),
                        'productId': $('#ProductId').val(),
                        'items': list,
                    });
            $.ajax({
                type: 'POST',
                url: '/SuperAdmin/Product/AddIngredients',
                data: data,
                async: true,
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                success: function (data) {
                    console.log(data);
                    if (data.code == 200) {
                        TimerSweet("Ingrendients Added!", 'Ingrendients is successfully added', "success", 2000);
                        setTimeout(function () {
                            location.reload();
                        }, 1000);
                    }
                    else {
                        sweetMessage("Error!", data.shortMessage, "error");
                    }
                },
                error: function (error) {
                    return error;
                },
            });
        }
    }
    $('#Form').submit(function (e) {
        e.preventDefault();
    });
    function getDataFromSimpleField(element) {
        var s = false;
        var value = $(element).val();

        if (value == "" || value == null || value == undefined) {
            s = false;
            if ($(element).hasClass('show-tick')) {
                $(element).closest('.dropdown').addClass('is-invalid');
                $(element).closest('.dropdown').removeClass('is-valid');
            }
            else {
                $(element).addClass('is-invalid');
                $(element).removeClass('is-valid');
            }
        }
        else if (!value.replace(/\s/g, '')[0].length) {
            s = false;
            if ($(element).hasClass('show-tick')) {
                $(element).closest('.dropdown').addClass('is-invalid');
                $(element).closest('.dropdown').removeClass('is-valid');
            }
            else {
                $(element).addClass('is-invalid');
                $(element).removeClass('is-valid');
            }
        }
        else {
            s = true;
            $(element).addClass('is-valid');
            $(element).removeClass('is-invalid');
        }
        if (s == false) {
            return false;
        }
        return true;
    }
</script>
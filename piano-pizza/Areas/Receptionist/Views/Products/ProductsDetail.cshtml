@model IEnumerable<Entities.ProductDtos>
@inject piano_pizza.Resources.LocalizationService local
@{
    Layout = "~/Areas/Receptionist/Views/Shared/_Layout.cshtml";
}
<section class="content">
    <div class="block-header">
        <div class="row">
            <div class="col-12">
                <h2>
                    @local.GetLocalizedHtmlString("Product Details")
                </h2>
            </div>
        </div>
    </div>
    <div class="container-fluid">
        <!-- Exportable Table -->
        <div class="row clearfix">
            <div class="col-lg-12">
                <div class="card">
                    <div class="header">
                        <div style="display: inline-block;">
                            <button id="all" class="btn-sm btn-primary rounded font-12 mt-2">@local.GetLocalizedHtmlString("All")</button>
                            <button id="active" class="btn-sm btn-primary FilterButton rounded font-12 mt-2">@local.GetLocalizedHtmlString("Active")</button>
                            <button id="block" class="btn-sm btn-primary FilterButton rounded font-12 mt-2">@local.GetLocalizedHtmlString("Blocked")</button>
                        </div>
                    </div>
                    <div class="body">
                        <div class="table-responsive">
                            <table id="table-1" class="table js-basic-example dataTable">
                                <thead class="no-wrap">
                                    <tr>
                                        <th>@local.GetLocalizedHtmlString("Product Name")</th>
                                        <th>@local.GetLocalizedHtmlString("Logo")</th>
                                        <th>@local.GetLocalizedHtmlString("Image")</th>
                                        <th>@local.GetLocalizedHtmlString("Category")</th>
                                        <th data-breakpoints="sm xs">@local.GetLocalizedHtmlString("Detail")</th>
                                        <th data-breakpoints="sm xs" class="text-center">@local.GetLocalizedHtmlString("Ingredients")</th>
                                        <th data-breakpoints="xs">@local.GetLocalizedHtmlString("Amount")</th>
                                        <th data-breakpoints="xs">@local.GetLocalizedHtmlString("Created At")</th>
                                        <th data-breakpoints="xs">@local.GetLocalizedHtmlString("Status")</th>
                                    </tr>
                                </thead>
                                <tbody class="no-wrap">
                                    @foreach (var i in Model)
                                    {
                                        if (i.Status == Entities.Enum.EntityStatus.Active)
                                        {
                                            <tr data-row="1">
                                                <td>
                                                    @i.Name
                                                </td>
                                                <td>
                                                    <div class="d-flex justify-content-left align-items-center">
                                                        <div class="avatar  me-1">
                                                            <img src="@i.Logo" class="rounded shadow mr-2" style="max-width: 31px;">
                                                        </div>
                                                    </div>
                                                </td>
                                                <td>
                                                    <ul class="list-unstyled team-info margin-0 aniimated-thumbnials" style="cursor:pointer">
                                                        @{
                                                            var count = 0;
                                                            var rem = 0;
                                                        }
                                                        @foreach (var a in i.ImageUrls)
                                                        {
                                                            {
                                                                count++;
                                                            }
                                                            if (count < 2)
                                                            {
                                                                <li> <a href="@a"> <img class="img-fluid img-thumbnail p-0" src="@a" height="30"> </a> </li>
                                                            }
                                                            else if (count == 2 && i.ImageUrls.Count() > 2)
                                                            {
                                                                {
                                                                    rem = i.ImageUrls.Count() - count;
                                                                }
                                                                <li class="container234">
                                                                    <a href="@a">
                                                                        <img class="img-fluid img-thumbnail p-0" src="@a" height="30">
                                                                        <div class="overlay">
                                                                            <div class="text">+@rem</div>
                                                                        </div>
                                                                    </a>
                                                                </li>
                                                            }
                                                            else if (count > 2)
                                                            {
                                                                <li style="display:none;"> <a href="@a"> <img class="img-fluid img-thumbnail p-0" src="@a" height="30"> </a> </li>
                                                            }
                                                        }
                                                    </ul>
                                                </td>
                                                <td>@i.CategoryName</td>
                                                <td class="align-middle text-center">
                                                    <a onclick="ShowDescription(@i.Id)" class="btn-sm btn-primary description"><i class="zmdi zmdi-eye text-white"></i></a>
                                                    <input type="hidden" id="d-@i.Id" value="@i.Description" />
                                                </td>
                                                <td class="align-middle text-center">
                                                    <a onclick="ShowIngredients(@i.Id)" class="btn-sm btn-primary"><i class="zmdi zmdi-eye text-white"></i></a>
                                                </td>
                                                <td>@i.Price</td>
                                                <td>@i.CreatedAt</td>
                                                <td>
                                                    <div class="badge badge-success badge-shadow badge_width_height">Active</div>
                                                </td>
                                            </tr>
                                        }
                                        else
                                        {
                                            <tr data-row="2">
                                                <td>
                                                    @i.Name
                                                </td>
                                                <td>
                                                    <div class="d-flex justify-content-left align-items-center">
                                                        <div class="avatar  me-1">
                                                            <img src="@i.Logo" class="rounded shadow mr-2" style="max-width: 31px;">
                                                        </div>
                                                    </div>
                                                </td>
                                                <td>
                                                    <ul class="list-unstyled team-info margin-0 aniimated-thumbnials" style="cursor:pointer">
                                                        @{
                                                            var count = 0;
                                                            var rem = 0;
                                                        }
                                                        @foreach (var a in i.ImageUrls)
                                                        {
                                                            {
                                                                count++;
                                                            }
                                                            if (count < 2)
                                                            {
                                                                <li> <a href="@a"> <img class="img-fluid img-thumbnail p-0" src="@a" height="30"> </a> </li>
                                                            }
                                                            else if (count == 2 && i.ImageUrls.Count() > 2)
                                                            {
                                                                {
                                                                    rem = i.ImageUrls.Count() - count;
                                                                }
                                                                <li class="container234">
                                                                    <a href="@a">
                                                                        <img class="img-fluid img-thumbnail p-0" src="@a" height="30">
                                                                        <div class="overlay">
                                                                            <div class="text">+@rem</div>
                                                                        </div>
                                                                    </a>
                                                                </li>
                                                            }
                                                            else if (count > 2)
                                                            {
                                                                <li style="display:none;"> <a href="@a"> <img class="img-fluid img-thumbnail p-0" src="@a" height="30"> </a> </li>
                                                            }
                                                        }
                                                    </ul>
                                                </td>
                                                <td>@i.CategoryName</td>
                                                <td class="align-middle text-center">
                                                    <a onclick="ShowDescription(@i.Id)" class="btn-sm btn-primary description"><i class="zmdi zmdi-eye text-white"></i></a>
                                                    <input type="hidden" id="d-@i.Id" value="@i.Description" />
                                                </td>
                                                <td class="align-middle text-center">
                                                    <a onclick="ShowIngredients(@i.Id)" class="btn-sm btn-primary"><i class="zmdi zmdi-eye text-white"></i></a>
                                                </td>
                                                <td>@i.Price</td>
                                                <td>@i.CreatedAt</td>
                                                <td>
                                                    <div class="badge badge-success badge-shadow badge_width_height">Active</div>
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- #END# Exportable Table -->
        <div class="modal fade bs-example-modal-md mt-5" id="des" tabindex="-1" role="dialog" aria-labelledby="des" aria-hidden="true">
            <div class="modal-dialog modal-md">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="formModal">@local.GetLocalizedHtmlString("Details")</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">×</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-md-12">
                                <p id="descriptionDtl"></p>
                            </div>
                        </div>
                    </div>
                </div>
            </div><!-- /.modal -->
        </div>
        <div class="modal fade bs-example-modal-md mt-5" id="ingredients" tabindex="-1" role="dialog" aria-labelledby="ingredients" aria-hidden="true">
            <div class="modal-dialog modal-md">
                <div class="modal-content">
                    <div class="modal-header">
                        <a class="btn-sm btn-primary float-left"><span class="text-white">@local.GetLocalizedHtmlString("Add Ingredients")</span></a>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">×</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-md-12">
                                <label>Extra Topping:</label><span class="ml-3">$25</span><a class="btn-sm btn-primary ml-2 float-right"><i class="far fa-edit text-white"></i></a><a class="btn-sm btn-danger float-right"><i class="fas fa-times text-white"></i></a>
                            </div><div class="col-md-12">
                                <label>Extra Topping:</label><span class="ml-3">$25</span><a class="btn-sm btn-primary ml-2 float-right"><i class="far fa-edit text-white"></i></a><a class="btn-sm btn-danger float-right"><i class="fas fa-times text-white"></i></a>
                            </div><div class="col-md-12">
                                <label>Extra Topping:</label><span class="ml-3">$25</span><a class="btn-sm btn-primary ml-2 float-right"><i class="far fa-edit text-white"></i></a><a class="btn-sm btn-danger float-right"><i class="fas fa-times text-white"></i></a>
                            </div><div class="col-md-12">
                                <label>Extra Topping:</label><span class="ml-3">$25</span><a class="btn-sm btn-primary ml-2 float-right"><i class="far fa-edit text-white"></i></a><a class="btn-sm btn-danger float-right"><i class="fas fa-times text-white"></i></a>
                            </div>
                        </div>

                    </div>
                </div>
            </div><!-- /.modal -->
        </div>
        <div class="modal fade bs-example-modal-md mt-5" id="imagesModal" tabindex="-1" role="dialog" aria-labelledby="des" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="formModal">@local.GetLocalizedHtmlString("Images")</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">×</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="table-responsive">
                            <table id="table-2" class="table table-bordered nowrap w-100">
                                <thead>
                                    <tr>
                                        <th>Id</th>
                                        <th>Product Name</th>
                                        <th>Image</th>
                                        <th>Delete</th>
                                    </tr>
                                </thead>
                                <tbody id="dataTable2">
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div><!-- /.modal -->
        </div>
    </div>
</section>

<script>
    $('#RprtChlg').addClass('active');
    $('#product').addClass('toggled');
    $("#active").click(function () {
        $('#active').removeClass('FilterButton');
        $('#active').siblings().addClass('FilterButton');
        var table = $('#table-1').DataTable();
        $.fn.dataTable.ext.search.pop();
        table.draw();
        $.fn.dataTable.ext.search.push(
            function (settings, data, dataIndex) {
                return $(table.row(dataIndex).node()).attr('data-row') == "1";
            }
        );
        table.draw();
    });
    $("#all").click(function () {
        $('#all').removeClass('FilterButton');
        $('#all').siblings().addClass('FilterButton');
        var table = $('#table-1').DataTable();
        $.fn.dataTable.ext.search.pop();
        table.draw();
    });
    $("#block").click(function () {
        $('#block').removeClass('FilterButton');
        $('#block').siblings().addClass('FilterButton');
        var table = $('#table-1').DataTable();
        $.fn.dataTable.ext.search.pop();
        table.draw();
        $.fn.dataTable.ext.search.push(
            function (settings, data, dataIndex) {
                return $(table.row(dataIndex).node()).attr('data-row') == "2";
            }
        );
        table.draw();

    });
</script>
<script>
    function showBlockModal(doc_id) {
        Swal.fire({
            title: 'Are you sure you want to block?',
            text: "",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Confirm!',
            showLoaderOnConfirm: true,
            preConfirm: (ref) => {
                return new Promise(async function (resolve, reject) {
                    var response = getResponseFromUrl('GET', '/SuperAdmin/Product/BlockEntity?id=' + doc_id);
                    if (response.code == 200) {
                        TimerSweet("Product Blocked!", 'Product is successfully blocked', "success", 2000);
                        setTimeout(function () {
                            location.reload();
                        }, 2000);
                    }
                    else {
                        sweetMessage("Error!", response.shortMessage, "error");
                    }
                })
            },
        }).then((result) => {
            if (result.isConfirmed) {

            }
        })
    }
    function showUnBlockModal(doc_id) {
        Swal.fire({
            title: 'Are you sure you want to unblock?',
            text: "",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Confirm!',
            showLoaderOnConfirm: true,
            preConfirm: (ref) => {
                return new Promise(async function (resolve, reject) {
                    var response = getResponseFromUrl('GET', '/SuperAdmin/Product/UnBlockEntity?id=' + doc_id);
                    if (response.code == 200) {
                        TimerSweet("Product Unblocked!", 'Product is successfully unblocked', "success", 2000);
                        setTimeout(function () {
                            location.reload();
                        }, 2000);
                    }
                    else {
                        sweetMessage("Error!", response.shortMessage, "error");
                    }
                })
            },
        }).then((result) => {
            if (result.isConfirmed) {

            }
        })
    }
</script>
<script>
    $(function () {
        var s = $('#BranchId').val();
        $('#CategoryId').selectpicker('destroy');
        var options = $('#CategorySelect > optgroup[label="' + s + '"] > option').clone();
        $('#CategoryId').html(options);
        $('#CategoryId').selectpicker();
    })
    function ShowCategories() {
        var s = $('#BranchId').val();
        $('#CategoryId').selectpicker('destroy');
        var options = $('#CategorySelect > optgroup[label="' + s + '"] > option').clone();
        $('#CategoryId').html(options);
        $('#CategoryId').selectpicker();
    }
    function addNewModal() {
        $("#Form")[0].reset();
        $('#addModal').modal("show");
        $('#form_type').val("1");
        var first = new FileUploadWithPreview('myFirstImage');
        var second = new FileUploadWithPreview('myFirstImage2');
        $('#myModalLabel').html("Add Product");
    }

    function AddProduct() {
        var bool = true;
        var GetAllValues = [];
        var form_type = $('#form_type').val();
        if (form_type == '1') {
            var files = $('#LogoImageFile')[0].files[0];
            var gallery = $('#LogoImageFile')[0].files;
            if (files == null) {
                sweetMessage("Warning!", "Please Select Logo", "error", 2000);
                return false;
            }
            else if (gallery.length == 0) {
                sweetMessage("Warning!", "Please Select Gallery", "error", 2000);
                return false;
            }
            $('#Form').find(('.form-control,.custom-file-container__custom-file__custom-file-input')).each(function (i, obj) {
                var values = getDataFromSimpleField($(obj));
                GetAllValues.push(values);
                if (GetAllValues.includes(false)) {
                    bool = false;
                }
            })
        }
        else {
            $('#Form').find(('.form-control')).each(function (i, obj) {
                var values = getDataFromSimpleField($(obj));
                GetAllValues.push(values);
                if (GetAllValues.includes(false)) {
                    bool = false;
                }
            })
        }
        if (bool == false) {
            MixinSweet("Please fill all the required fields", "", "error", 2000);
        }
        else {
            $('#add_btn').addClass('btn-progress');
            var formdata = new FormData(document.getElementById('Form'));
            if (form_type == '1') {
            }
            else {
                var doc_id = $('#doc_id').val();
                formdata.append("ProductId", doc_id);
            }
            $.ajax({
                type: 'POST',
                url: '/SuperAdmin/Product/AddProduct',
                data: formdata,
                async: true,
                processData: false,
                contentType: false,
                success: function (data) {
                    console.log(data);
                    if (data.code == 200) {
                        if (form_type == '1') {
                            TimerSweet("Product Added!", 'Product is successfully added', "success", 2000);
                        }
                        else {
                            TimerSweet("Product Updated!", 'Product is successfully updated', "success", 2000);
                        }
                        $('#addModal').modal('hide');
                        setTimeout(function () {
                            location.reload();
                        }, 1000);
                    }
                    else {
                        sweetMessage("Error!", data.shortMessage, "error");
                    }
                },
                error: function (error) {
                    return error;
                },
            });
        }
    }
    function getDataFromSimpleField(element) {
        var s = false;
        var value = $(element).val();

        if (value == "" || value == null || value == undefined) {
            s = false;
            $(element).addClass('is-invalid');
            $(element).removeClass('is-valid');
            if ($(element).hasClass('custom-file-container__custom-file__custom-file-input')) {
                $(element).siblings('span').addClass('red_border');
                $(element).siblings('span').removeClass('none_border');
            }
        }
        else if (!value.replace(/\s/g, '')[0].length) {
            s = false;
            $(element).addClass('is-invalid');
            $(element).removeClass('is-valid');
            if ($(element).hasClass('custom-file-container__custom-file__custom-file-input')) {
                $(element).siblings('span').addClass('red_border');
                $(element).siblings('span').removeClass('none_border');
            }
        }
        else {
            s = true;
            $(element).addClass('is-valid');
            $(element).removeClass('is-invalid');
            if ($(element).hasClass('custom-file-container__custom-file__custom-file-input')) {
                $(element).siblings('span').removeClass('red_border');
                $(element).siblings('span').addClass('none_border');
            }
        }
        if (s == false) {
            return false;
        }
        return true;
    }
</script>
<script>
    function showEditModal(id) {
        $("#Form")[0].reset();
        $('#doc_id').val(id);
        $('#form_type').val('2');
        var name = $('#n-' + id).val();
        var logo = $('#l-' + id).val();
        var desc = $('#d-' + id).val();
        var price = $('#p-' + id).val();
        $('#BranchId').hide();
        $('#CategoryId').hide();
        $('#Name').val(name);
        $('#desc').val(desc);
        $('#Price').val(price);
        var images = [];
        $('.img-' + id).each(function (item) {
            images.push($(this).val());
        });
        var first = new FileUploadWithPreview('myFirstImage', {
            presetFiles: [
                logo
            ],
        })
        new FileUploadWithPreview('myFirstImage2', {
            presetFiles: [],
        })
        $('.custom-file-container__image-multi-preview').remove();
        $('#myModalLabel').html("Edit Product");
        $('#addModal').modal("show");
    }
</script>
<script>
    function ShowDescription(doc_id) {
        var desc = $('#d-' + doc_id).val();
        $('#des').modal("show");
        $('#descriptionDtl').html(desc);
    }
    function ShowImages(Id) {
        var name = $('#n-' + Id).val();
        $("#table-2").DataTable().destroy();
        $("#dataTable2").html('');
        $('.img-' + Id).each(function (item) {
            var id = $(this).attr("id").split('-');
            var data = {
                value: $(this).val(),
                id: id[1],
            };
            var image2 = `<div class="image-link">
                                    <a class="image-popup-vertical-fit" href="${data.value}">
                                        <img class="img-responsive thumbnail" src="${data.value}" width="35" height="30">
                                    </a>
                                </div>`;
            var action = '<a onclick="showDeleteImageModal(' + data.id+')" class="btn-sm btn-default waves-effect waves-float waves-red"><i class="fas fa-trash"></i></a>';

            var row = '<tr id="' + data.id + '"><td>' + data.id + '</td><td>' + name + '</td><td>' + image2 + '</td><td>' + action + '</td></tr>';
            $('#dataTable2').append(row);
        });
        $('#table-2').DataTable();
        $('#imagesModal').modal("show");
    }
    function showDeleteImageModal(doc_id) {
        Swal.fire({
            title: 'Are you sure you want to delete image?',
            text: "",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Confirm!',
            showLoaderOnConfirm: true,
            preConfirm: (ref) => {
                return new Promise(async function (resolve, reject) {
                    var response = getResponseFromUrl('GET', '/SuperAdmin/Product/DeleteProductImage?id=' + doc_id);
                    if (response.code == 200) {
                        TimerSweet("Image Deleted!", 'Image is successfully deleted', "success", 2000);
                        $('#table-2').DataTable().destroy();
                        $('#' + doc_id).remove();
                        $('#table-2').DataTable();
                    }
                    else {
                        sweetMessage("Error!", response.shortMessage, "error");
                    }
                })
            },
        }).then((result) => {
            if (result.isConfirmed) {

            }
        })
    }
</script>
<!--Ajax-->
<script>
    var getResponseFromUrl = function (requestType, requestUrl, requestData) {
        var response;
        $.ajax({
            type: requestType,
            url: requestUrl,
            data: requestData,
            data: requestData,
            async: false,
            processData: false,
            contentType: false,
            success: function (data) {
                response = data;
                console.log(data);
            },
            error: function (error) {
                return error;
            },
        });
        return response;
    }
</script>